name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: write # Needed for github-tag-action to push new tags and for docker meta to read code
  packages: write # Required to push to GHCR

jobs:
  determine_version:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Only run on push to main
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
      version: ${{ steps.tag_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetches all history for accurate versioning

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: "patch" # Or "minor", "major" based on preference or commit message analysis if action supports it
          # release_branches: "main" # Ensure it only tags on main branch pushes if action supports it

  build_and_push:
    needs: determine_version # Ensure versioning happens first on main branch pushes
    # This job will run on pushes to main (after determine_version)
    # OR when a new version tag is pushed directly (which determine_version creates)
    # The condition below handles running EITHER after 'determine_version' on a main push,
    # OR if the event is a tag push (v*.*.*)
    if: always() && (needs.determine_version.result == 'success' || startsWith(github.ref, 'refs/tags/v'))
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
            build_type: "release"
          - platform: linux/amd64
            runner: ubuntu-latest
            build_type: "debug"
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
            build_type: "release"
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
            build_type: "debug"
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        # If triggered by tag, checkout the tag itself
        with:
          ref: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.determine_version.outputs.new_tag || github.ref }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          # For pushes to main (release and debug)
          # For version tags (release and debug)
          tags: |
            # Release build tags
            type=sha,prefix=,enable=${{ matrix.build_type == 'release' && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
            type=raw,value=latest,enable=${{ matrix.build_type == 'release' && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
            type=ref,event=tag,enable=${{ matrix.build_type == 'release' && startsWith(github.ref, 'refs/tags/v') }}

            # Debug build tags
            type=sha,prefix=,suffix=-debug,enable=${{ matrix.build_type == 'debug' && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
            type=raw,value=latest-debug,enable=${{ matrix.build_type == 'debug' && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
            type=ref,event=tag,suffix=-debug,enable=${{ matrix.build_type == 'debug' && startsWith(github.ref, 'refs/tags/v') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platform: ${{ matrix.platform }}
          build-args: |
            BUILD_MODE=${{ matrix.build_type }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
